angular.module("ccApp",["ngRoute","ngAnimate","entities","geonames"]).config(["$routeProvider",function(n){n.when("/error",{template:"Error during route change"}).otherwise({redirectTo:"/error"})}]).run(["$rootScope","$timeout","$location",function(n,t,o){n.$on("$routeChangeError",function(){o.path("/error")}),n.$on("$routeChangeStart",function(){n.isLoading=!0}),n.$on("$routeChangeSuccess",function(){t(function(){n.isLoading=!1},300)}),n.activePage=function(n){return n===(o.path().substring(1)||"/")}}]),angular.module("entities",[]).factory("countriesEntity",["$filter",function(n){var t=[];return{set:function(n){t=n},get:function(){return t},find:function(o){return n("filter")(t,{countryCode:o}).pop()}}}]),function(){var n="http://api.geonames.org/",t="http://www.geonames.org/";angular.module("geonames",["entities"]).constant("GEOAPI",n).constant("GEOURL",t).constant("FLAG",t+"flags/x/{{ code | lowercase }}.gif").constant("MAP",t+"img/country/250/{{ code | uppercase }}.png").factory("gateway",["$http",function(n){return function(t,o){return o=angular.extend({formatted:!0,username:"tomatao"},o||{}),n({method:"GET",cache:!0,params:o,url:t}).error(function(){console.log("error",arguments)})}}])}(),angular.module("geonames").config(["$provide","GEOAPI",function(n,t){n.constant("COUNTRYINFO",t+"countryInfoJSON")}]).factory("countryListRequest",["gateway","COUNTRYINFO","$q","countriesEntity",function(n,t,o,r){return function(e){var u=o.defer();return n(t,e).success(function(n){r.set(n.geonames),u.resolve(r)}),u.promise}}]),angular.module("geonames").config(["$provide","GEOAPI",function(n,t){n.constant("CAPITALINFO",t+"search")}]).factory("capitalRequest",["gateway","CAPITALINFO",function(n,t){return function(o){return n(t,{country:o.countryCode,name_equals:o.capital,type:"json",featureCode:"PPLC"})}}]),angular.module("geonames").config(["$provide","GEOAPI",function(n,t){n.constant("NEIGHBOURS",t+"neighboursJSON")}]).factory("neighborsListRequest",["gateway","NEIGHBOURS",function(n,t){return function(o){return n(t,{geonameId:o.geonameId})}}]),angular.module("geonames").factory("countryRepo",["countryListRequest","capitalDataDecorator","neighborsDecorator",function(n,t,o){return function(r){return n().then(function(){return t(r)}).then(function(){return o(r)})}}]).factory("capitalDataDecorator",["capitalRequest","$q","countriesEntity",function(n,t,o){return function(r){var e=t.defer(),u=o.find(r);if(null==u)throw Error("Country not found");return n(u).success(function(n){e.resolve(angular.extend(u,{capitalData:n.geonames.pop()}))}),e.promise}}]).factory("neighborsDecorator",["neighborsListRequest","$q","countriesEntity",function(n,t,o){return function(r){var e=t.defer(),u=o.find(r);if(null==u)throw Error("Country not found");return n(u).success(function(n){e.resolve(angular.extend(u,{neighbors:n.geonames}))}),e.promise}}]),angular.module("ccApp").config(["$routeProvider",function(n){n.when("/",{templateUrl:"./js/intro/intro.html",controller:"IntroCtrl"})}]).controller("IntroCtrl",["$scope",function(){}]),angular.module("ccApp").config(["$routeProvider",function(n){n.when("/countries",{templateUrl:"./js/countries/list.html",controller:"ListCtrl",resolve:{countries:["countryListRequest",function(n){return n()}]}})}]).controller("ListCtrl",["$scope","countries","$location","$interpolate","COUNTRYURL",function(n,t,o,r,e){n.countryList=t.get(),n.goToCountry=function(n){o.path(r(e)({code:n}))}}]),angular.module("ccApp").constant("COUNTRYURL","/countries/{{ code }}/capital").config(["$routeProvider",function(n){n.when("/countries/:code/capital",{templateUrl:"./js/countries/country.html",controller:"CountryCtrl",resolve:{country:["countryRepo","$route",function(n,t){return n(t.current.params.code)}]}})}]).controller("CountryCtrl",["$scope","country","$interpolate","FLAG","MAP","COUNTRYURL",function(n,t,o,r,e,u){function c(n,t){return o(n)({code:t})}n.country=t,n.countryUrl=c.bind(this,u),n.flagUrl=c.bind(this,r),n.mapUrl=c.bind(this,e)}]);